#!/bin/busybox sh
# Minimal init script for testing hardening module

/bin/busybox --install -s

# Mount essential filesystems
mount -t proc none /proc
mount -t sysfs none /sys
mount -t devtmpfs none /dev

# Clear screen and show banner
clear
echo "========================================="
echo "    Hardening Module Test Environment    "
echo "========================================="
echo ""

# Show kernel version
echo "Kernel: $(uname -r)"
echo ""

# Check if hardening module is loaded
if [ -d /sys/kernel/security/hardening ]; then
    echo -e "\033[32m[OK]\033[0m Hardening module detected"
    echo ""
    echo "Security filesystem entries:"
    ls -la /sys/kernel/security/hardening/
    echo ""
    
    # Show module status
    if [ -f /sys/kernel/security/hardening/enabled ]; then
        echo "Module enabled: $(cat /sys/kernel/security/hardening/enabled)"
    fi
    if [ -f /sys/kernel/security/hardening/enforce ]; then
        echo "Enforcement mode: $(cat /sys/kernel/security/hardening/enforce)"
    fi
    if [ -f /sys/kernel/security/hardening/stats ]; then
        echo ""
        echo "Module statistics:"
        cat /sys/kernel/security/hardening/stats
    fi
else
    echo -e "\033[31m[FAIL]\033[0m Hardening module not found in securityfs"
fi

echo ""
echo "Available commands:"
echo "  test-behavior   - Test behavioral anomaly detection"
echo "  test-temporal   - Test temporal access control"
echo "  test-resource   - Test resource monitoring"
echo "  test-container  - Test container security"
echo "  poweroff        - Shutdown the VM"
echo ""

# Simple test commands
cat > /bin/test-behavior << 'SCRIPT'
#!/bin/sh
echo "Testing behavioral anomaly detection..."
echo ""
echo "1. Testing rapid syscall patterns..."
for i in $(seq 1 100); do
    echo -n > /dev/null
done
echo "Done."
echo ""
echo "2. Testing unusual syscall sequences..."
# This would trigger anomaly detection in a real scenario
dd if=/dev/zero of=/tmp/test bs=1K count=1 2>/dev/null
chmod +x /tmp/test
/tmp/test || true
echo "Done."
SCRIPT
chmod +x /bin/test-behavior

cat > /bin/test-temporal << 'SCRIPT'
#!/bin/sh
echo "Testing temporal access control..."
echo ""
if [ -f /sys/kernel/security/hardening/time_rules ]; then
    echo "Time rules interface available"
    # In a real test, we would add time-based rules here
else
    echo "Time rules interface not available"
fi
SCRIPT
chmod +x /bin/test-temporal

cat > /bin/test-resource << 'SCRIPT'
#!/bin/sh
echo "Testing resource usage monitoring..."
echo ""
echo "1. Memory allocation test..."
dd if=/dev/zero of=/tmp/bigfile bs=1M count=10 2>/dev/null
rm -f /tmp/bigfile
echo "Done."
echo ""
echo "2. Process creation test..."
for i in $(seq 1 10); do
    (sleep 0.1) &
done
wait
echo "Done."
SCRIPT
chmod +x /bin/test-resource

cat > /bin/test-container << 'SCRIPT'
#!/bin/sh
echo "Testing container security features..."
echo ""
if [ -f /sys/kernel/security/hardening/container_policy ]; then
    echo "Container policy interface available"
    cat /sys/kernel/security/hardening/container_policy
else
    echo "Container policy interface not available"
fi
echo ""
echo "Current namespace info:"
ls -la /proc/self/ns/
SCRIPT
chmod +x /bin/test-container

# Interactive shell
exec /bin/sh
